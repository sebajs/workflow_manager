digraph gfx { 
rankdir=LR; 
node [shape=circle,color=red,fixedsize=false,label="idle",peripheries=1]; "idle";
node [shape=circle,color=green,fixedsize=false,label="active",peripheries=5]; "active";
node [shape=circle,color=green,fixedsize=false,label="active\nwith\nmsgs",peripheries=1]; "active_with_msgs";
node [shape=circle,color=green,fixedsize=false,label="grace",peripheries=1]; "grace";
node [shape=circle,color=red,fixedsize=false,label="passive\naccum",peripheries=1]; "passive_accum";
node [shape=circle,color=red,fixedsize=false,label="passive\nnot\naccum",peripheries=1]; "passive_not_accum";
node [shape=circle,color=red,fixedsize=false,label="expired",peripheries=1]; "expired";
node [shape=circle,color=red,fixedsize=false,label="shutdown",peripheries=1]; "shutdown";
node [shape=box,color=black,fixedsize=false,label="idle\n.checkBalanceForActive",peripheries=1]; "idle.checkBalanceForActive";
edge [fontsize=10, label="M:deposit"] "idle"->"idle.checkBalanceForActive"
edge [fontsize=10, label="C: ok"] "idle.checkBalanceForActive"->"active"
edge [fontsize=10, label="C: error"] "idle.checkBalanceForActive"->"idle"
node [shape=box,color=black,fixedsize=false,label="active\n.checkDeposit",peripheries=1]; "active.checkDeposit";
edge [fontsize=10, label="M:deposit"] "active"->"active.checkDeposit"
edge [fontsize=10, label="C: active"] "active.checkDeposit"->"active"
edge [fontsize=10, label="C: grace"] "active.checkDeposit"->"grace"
edge [fontsize=10, label="C: passive_accum"] "active.checkDeposit"->"passive_accum"
edge [fontsize=10, label="C: passive_not_accum"] "active.checkDeposit"->"passive_not_accum"
edge [fontsize=10, label="C: expired"] "active.checkDeposit"->"expired"
node [shape=box,color=black,fixedsize=false,label="active\n.setGrace",peripheries=1]; "active.setGrace";
edge [fontsize=10, label="Timer"] "active"->"active.setGrace"
edge [fontsize=10, label="C: ok"] "active.setGrace"->"active"
edge [fontsize=10, label="C: error"] "active.setGrace"->"grace"
node [shape=box,color=black,fixedsize=false,label="active\n.setActiveWithMsgs",peripheries=1]; "active.setActiveWithMsgs";
edge [fontsize=10, label="Timer"] "active"->"active.setActiveWithMsgs"
edge [fontsize=10, label="C: ok"] "active.setActiveWithMsgs"->"active"
edge [fontsize=10, label="C: error"] "active.setActiveWithMsgs"->"active_with_msgs"
node [shape=box,color=black,fixedsize=false,label="active_with_msgs\n.sendMessage",peripheries=1]; "active_with_msgs.sendMessage";
edge [fontsize=10, label="Timer"] "active_with_msgs"->"active_with_msgs.sendMessage"
edge [fontsize=10, label="S"] "active_with_msgs.sendMessage"->"active_with_msgs"
node [shape=box,color=black,fixedsize=false,label="active_with_msgs\n.checkBalanceForActive",peripheries=1]; "active_with_msgs.checkBalanceForActive";
edge [fontsize=10, label="M:deposit"] "active_with_msgs"->"active_with_msgs.checkBalanceForActive"
edge [fontsize=10, label="C: ok"] "active_with_msgs.checkBalanceForActive"->"active"
edge [fontsize=10, label="C: error"] "active_with_msgs.checkBalanceForActive"->"active_with_msgs"
node [shape=box,color=black,fixedsize=false,label="active_with_msgs\n.setGrace",peripheries=1]; "active_with_msgs.setGrace";
edge [fontsize=10, label="Timer"] "active_with_msgs"->"active_with_msgs.setGrace"
edge [fontsize=10, label="S"] "active_with_msgs.setGrace"->"grace"
node [shape=box,color=black,fixedsize=false,label="grace\n.setPassive",peripheries=1]; "grace.setPassive";
edge [fontsize=10, label="Timer"] "grace"->"grace.setPassive"
edge [fontsize=10, label="C: accumulate"] "grace.setPassive"->"passive_accum"
edge [fontsize=10, label="C: !accumulate"] "grace.setPassive"->"passive_not_accum"
node [shape=box,color=black,fixedsize=false,label="grace\n.checkBalanceForActive",peripheries=1]; "grace.checkBalanceForActive";
edge [fontsize=10, label="M:deposit"] "grace"->"grace.checkBalanceForActive"
edge [fontsize=10, label="C: ok"] "grace.checkBalanceForActive"->"active"
edge [fontsize=10, label="C: error"] "grace.checkBalanceForActive"->"grace"
node [shape=box,color=black,fixedsize=false,label="passive_accum\n.checkBalanceForActive",peripheries=1]; "passive_accum.checkBalanceForActive";
edge [fontsize=10, label="M:deposit"] "passive_accum"->"passive_accum.checkBalanceForActive"
edge [fontsize=10, label="C: ok"] "passive_accum.checkBalanceForActive"->"active"
edge [fontsize=10, label="C: error"] "passive_accum.checkBalanceForActive"->"passive_accum"
node [shape=box,color=black,fixedsize=false,label="passive_accum\n.setPassiveNotAccum",peripheries=1]; "passive_accum.setPassiveNotAccum";
edge [fontsize=10, label="Timer"] "passive_accum"->"passive_accum.setPassiveNotAccum"
edge [fontsize=10, label="C: ok"] "passive_accum.setPassiveNotAccum"->"passive_not_accum"
edge [fontsize=10, label="C: error"] "passive_accum.setPassiveNotAccum"->"passive_accum"
node [shape=box,color=black,fixedsize=false,label="passive_not_accum\n.checkBalanceForActive",peripheries=1]; "passive_not_accum.checkBalanceForActive";
edge [fontsize=10, label="M:deposit"] "passive_not_accum"->"passive_not_accum.checkBalanceForActive"
edge [fontsize=10, label="C: ok"] "passive_not_accum.checkBalanceForActive"->"active"
edge [fontsize=10, label="C: error"] "passive_not_accum.checkBalanceForActive"->"passive_not_accum"
node [shape=box,color=black,fixedsize=false,label="passive_not_accum\n.expropiateBalance",peripheries=1]; "passive_not_accum.expropiateBalance";
edge [fontsize=10, label="Timer"] "passive_not_accum"->"passive_not_accum.expropiateBalance"
edge [fontsize=10, label="S"] "passive_not_accum.expropiateBalance"->"passive_not_accum"
node [shape=box,color=black,fixedsize=false,label="passive_not_accum\n.setExpired",peripheries=1]; "passive_not_accum.setExpired";
edge [fontsize=10, label="Timer"] "passive_not_accum"->"passive_not_accum.setExpired"
edge [fontsize=10, label="S"] "passive_not_accum.setExpired"->"expired"
node [shape=box,color=black,fixedsize=false,label="expired\n.checkBalanceForActive",peripheries=1]; "expired.checkBalanceForActive";
edge [fontsize=10, label="M:deposit"] "expired"->"expired.checkBalanceForActive"
edge [fontsize=10, label="C: ok"] "expired.checkBalanceForActive"->"active"
edge [fontsize=10, label="C: error"] "expired.checkBalanceForActive"->"expired"
node [shape=box,color=black,fixedsize=false,label="expired\n.setShutdown",peripheries=1]; "expired.setShutdown";
edge [fontsize=10, label="Timer"] "expired"->"expired.setShutdown"
edge [fontsize=10, label="S"] "expired.setShutdown"->"shutdown"
}